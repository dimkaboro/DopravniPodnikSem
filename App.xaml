<Application x:Class="DopravniPodnikSem.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:DopravniPodnikSem.Converters"
             StartupUri="MainWindow.xaml">

    <Application.Resources>

        <local:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <local:StringToVisibilityConverter x:Key="StringToVisibilityConverter" />
        
        <!-- Стиль для кнопок бокового меню -->
        <Style x:Key="MenuButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#3A3F44"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Padding" Value="20, 10"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Margin" Value="0,5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                CornerRadius="10" 
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" 
                                              VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#5A6268"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Стиль для гамбургер-кнопки -->
        <Style x:Key="HamburgerButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Foreground" Value="#335252" />
            <Setter Property="FontSize" Value="24" />
            <Setter Property="Padding" Value="5" />
            <Setter Property="Margin" Value="10" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Content" Value="☰" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="#335252" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Определение стиля CustomButtonStyle -->
        <Style x:Key="CustomButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#6C63FF"/>
            <Setter Property="Foreground" Value="#D4DDE1"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                CornerRadius="20"
                                Padding="10">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#5A55E1"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#4842C4"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Определение стиля RoundedInputBorderStyle -->
        <Style x:Key="RoundedInputBorderStyle" TargetType="Border">
            <Setter Property="Background" Value="#333348"/>
            <Setter Property="CornerRadius" Value="8"/>
            <Setter Property="Padding" Value="8"/>
            <Setter Property="Margin" Value="0,0,0,5"/>
        </Style>
        
        <!-- Enhanced TextBox Style -->
        <Style x:Key="EnhancedTextBoxStyle" TargetType="TextBox">
            <Setter Property="Background" Value="#333348" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Width" Value="232" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="FontFamily" Value="Segoe UI" />
        </Style>

        <!-- Enhanced PasswordBox Style -->
        <Style x:Key="EnhancedPasswordBoxStyle" TargetType="PasswordBox">
            <Setter Property="Background" Value="#333348" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Width" Value="225" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="FontFamily" Value="Segoe UI" />
        </Style>

        <Style x:Key="EnhancedComboBoxStyle" TargetType="ComboBox">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Background" Value="#212529" />
            <Setter Property="BorderBrush" Value="#28AEED" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="FontFamily" Value="Montserrat" />
            <Setter Property="Padding" Value="5" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  Foreground="{TemplateBinding Foreground}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  
                                  HorizontalContentAlignment="Left"
                                  VerticalContentAlignment="Center"
                                  Padding="{TemplateBinding Padding}" />
                            <Popup Name="Popup" Placement="Bottom" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Focusable="False">
                                <Border Background="#212529" BorderBrush="#28AEED" BorderThickness="1">
                                    <ScrollViewer>
                                        <ItemsPresenter />
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="CustomDataGridCellStyle" TargetType="DataGridCell">
    <Setter Property="Foreground" Value="White"/>
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="FontFamily" Value="Montserrat"/>
    <Setter Property="FontSize" Value="14"/>
    <Style.Triggers>
        <Trigger Property="IsSelected" Value="True">
            <Setter Property="Background" Value="#28AEED"/>
            <Setter Property="Foreground" Value="White"/>
        </Trigger>
    </Style.Triggers>
</Style>

    </Application.Resources>
</Application>
